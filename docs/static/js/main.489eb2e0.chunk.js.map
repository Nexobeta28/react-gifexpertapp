{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","ev","preventDefault","trim","length","category","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","a","encodeURI","fetch","respuesta","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","card","animate__animated","animate__flash","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mNAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAgB5C,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAGC,iBAEAJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAQ,OAAKP,GAAL,mBAAoBO,OAC1CN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAlBc,SAACP,GACvBF,EAAcE,EAAGQ,OAAOF,YCKjBG,EAVY,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAEpC,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCPHK,EAAO,uCAAG,WAAMZ,GAAN,uBAAAa,EAAA,6DACbL,EADa,iDACmCM,UAAUd,GAD7C,+DAEKe,MAAMP,GAFX,cAEbQ,EAFa,gBAGEA,EAAUC,OAHZ,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHf,GAAIe,EAAIf,GACRC,MAAOc,EAAId,MACXC,IAAKa,EAAIC,OAAOC,iBAAiBf,QATtB,kBAaZW,GAbY,4CAAH,sDCIPK,EAAU,SAAC,GAAgB,IAAfxB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACZR,mBAAS,CAC/B0B,KAAM,GACNO,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAoBtC,OAZAC,qBAAU,WAENhB,EAAQZ,GAEP6B,MAAK,SAAAV,GACFQ,EAAS,CACLT,KAAMC,EACNM,SAAS,SAGlB,CAACzB,IAEG0B,EDjByBI,CAAa9B,GAAhCsB,EAFsB,EAE5BJ,KAAcO,EAFc,EAEdA,QAErB,OACI,oCACI,4BAAKzB,GAEJyB,EAAU,uBAAGM,MAAI,EAACC,mBAAiB,EAACC,gBAAc,GAAxC,eAA2D,KAEtE,yBAAKxB,UAAU,aAEPa,EAAOF,KAAI,SAAAC,GACP,OAAO,kBAAC,EAAD,eAAaa,IAAKb,EAAIf,IAAQe,UEQ9Cc,EArBM,WAAO,IAAD,EACa3C,mBAAS,CAAC,cADvB,mBAChB4C,EADgB,KACJ7C,EADI,KAGvB,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BACM6C,EAAWhB,KAAI,SAAApB,GAAQ,OACrB,kBAAC,EAAD,CACIkC,IAAKlC,EACLA,SAAUA,UCXlCqC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.489eb2e0.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (ev) => {\r\n        setInputValue(ev.target.value);\r\n    }\r\n\r\n    const handleSubmit = (ev) => {\r\n        ev.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(category => [inputValue, ...category])\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem;","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=jWOCkgERIBfuaOzWIjiGd7j80I4hhqa4`\r\n    const respuesta = await fetch(url);\r\n    const {data} = await respuesta.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n    return gifs;\r\n}","import React, { useState, useEffect } from 'react'\r\nimport GifGridItem from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n    const {data: images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n            {loading ? <p card animate__animated animate__flash>Cargando...</p> : null}\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img => {\r\n                        return <GifGridItem key={img.id} {...img}/>\r\n                    })\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    // si el ultimo array esta vacio, lo va a ejecutar una vez, si no, lo\r\n    // va a ejecutar cada vez que haya un cambio en ese elemento del array\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n\r\n        .then(gifs => {\r\n            setState({\r\n                data: gifs,\r\n                loading: false\r\n            })\r\n        })\r\n    }, [category])\r\n\r\n    return state; // {data:[], loading: ture}\r\n}","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr/>\r\n\r\n            <ol>\r\n                { categories.map(category =>\r\n                    <GifGrid\r\n                        key={category}\r\n                        category={category}\r\n                    />\r\n                    )}\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}